<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd 
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-2.5.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd">  
     <!-- 配置整合mybatis过程 -->
    <!-- 1.配置数据库相关参数properties的属性：${url} -->
    <context:property-placeholder location="classpath:jdbc.properties" />

    <!-- 2.数据库连接池 -->
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"> 
	    <!--   配置连接池属性 -->
	    <property name="driverClassName" value="${jdbc.driver}" />  
	    <property name="url" value="${jdbc.url}" />  
	    <property name="username" value="${jdbc.username}" />  
	    <property name="password" value="${jdbc.password}" />  	  
	    <property name="testWhileIdle" value="true" />  
	    <property name="testOnBorrow" value="true" />  
	    <property name="testOnReturn" value="false" />  
	    <property name="validationQuery" value="SELECT 1" />  
	    <property name="validationInterval" value="30000" />  
	    <property name="timeBetweenEvictionRunsMillis" value="60000" />  
	    <property name="minEvictableIdleTimeMillis" value="300000" />  
	    <property name="numTestsPerEvictionRun" value="3"/>  
	    <property name="maxActive" value="1000" />  
	    <!-- <property name="maxIdle" value="100" />  -->
	    <property name="minIdle" value="100" />      
	    <property name="maxWait" value="60000" />  
	    <property name="initialSize" value="30" />  
	    <property name="removeAbandonedTimeout" value="60" />  
	    <property name="removeAbandoned" value="true" />   
	    <property name="logAbandoned" value="true" />
	    <property name="jmxEnabled" value="true" />
	    <property name="abandonWhenPercentageFull" value="60" />
	    <property name="jdbcInterceptors" value="ResetAbandonedTimer" /> 
	</bean> 
	 
	
	<!-- <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
       基本属性 url、user、password 
      <property name="url" value="${jdbc.url}" />
      <property name="username" value="${jdbc.username}" />
      <property name="password" value="${jdbc.password}" />

       配置初始化大小、最小、最大 
      <property name="initialSize" value="10" />
      <property name="minIdle" value="10" /> 
      <property name="maxActive" value="100" />

      配置获取连接等待超时的时间 
      <property name="maxWait" value="60000" />

      配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
      <property name="timeBetweenEvictionRunsMillis" value="60000" />

       配置一个连接在池中最小生存的时间，单位是毫秒 
      <property name="minEvictableIdleTimeMillis" value="300000" />

      <property name="validationQuery" value="SELECT 'x'" />
      <property name="testWhileIdle" value="true" />
      <property name="testOnBorrow" value="false" />
      <property name="testOnReturn" value="false" />

       打开PSCache，并且指定每个连接上PSCache的大小 
      <property name="poolPreparedStatements" value="true" />
      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

       配置监控统计拦截的filters 
      <property name="filters" value="stat" />
</bean>  -->

    <!-- 3.配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource" />
        <!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <!-- 扫描entity包 使用别名 -->
        <property name="typeAliasesPackage" value="com.lflweb.entity" />
        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath:com/lvfulo/sqlxml/*.xml" />
    </bean>
    
    <!-- 配置SqlSessionTemplate对象 -->
    <bean id="sqlSessionTemp" class="org.mybatis.spring.SqlSessionTemplate">   
        <constructor-arg index="0" ref="sqlSessionFactory" />   
    </bean>  

    <!-- 4.配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <!-- 给出需要扫描Dao接口包 -->
        <property name="basePackage" value="com.lvfulo.dao" />
    </bean>
    
    <context:component-scan base-package="com.lvfulo"> 
    	   <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>     
    </context:component-scan> 
     <!-- 激活annotation功能 -->  
    <context:annotation-config />  
    
    
         <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource" />
    </bean>  
    <!-- 配置基于注解的声明式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>  
   
    <!-- <bean id="userDao" class="com.nestle.dao.impl.UserDaoImpl" /> -->

</beans>
